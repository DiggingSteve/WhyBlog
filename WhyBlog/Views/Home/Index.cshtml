@model IndexView
@section head{
    <link href="~/css/index.css" rel="stylesheet" />
    <link href="~/plugin/wangeEditor/wangEditor.css" rel="stylesheet" />
    <script src="~/plugin/wangeEditor/wangEditor.js"></script>
    <script src="~/js/blog.js"></script>
}
<div class="grey-bg">
    <div class="blog-edit">
        <div class="blog-edit-wrap">
            <div class="head"><span id="btnCloseBlog">x</span></div>
            <div class="content">
                <div class="title">
                    <input id="txt_title" type="text" class="input" placeholder="Please input title" />
                </div>
                <div class="text-edit">
                    <div id="editor">

                    </div>
                </div>
            </div>
            <div class="foot">
                <div><button class="btn" type="button" id="btnCommitBlog">Commit</button></div>
            </div>
        </div>
    </div>
</div>
<div class="index_wrap">
    <div class="right-con">
        <div class="sign-wrap">
            @if (!Model.IsLogin)
            {
                <div style="cursor:pointer;" id="gitSignIn" class="block"><a class="git"><i style="margin-right:10px;" class="iconfont icon-Git"></i>Github Sign In</a></div>
            }
            @if (Model.IsLogin)
            {
                <div id="userWrap" class="block">
                    <div class="icon"><img id="userIcon" src="@Model.User.Avatar_url" /></div>
                    <div class="info">
                        <div>
                            <span class="name" id="userName">@Model.User.NickName</span>
                        </div>
                        <div>
                            <span id="userEmail">@Model.User.Email</span>
                        </div>

                    </div>
                    <div><i id="icon_signOut" class="iconfont icon-tuichu"></i></div>
                </div>
                <div class="button-group">
                    <div><span id="btnBlog">Add New</span></div>
                </div>
            }
        </div>
    </div>
    <div class="blog-wrap">
        <div class="page-btn-group">
            <div class="btn-page" id="btnPre"><i class="iconfont icon-pre"></i></div>
         <div class="btn-page" pageIndex="1" id="txtPageIndex"></div>
            <div class="btn-page" id="btnNext" style="transform:rotate(180deg)"><i class="iconfont icon-pre"></i></div>
        </div>
        <ul class="list" id="blog_container"></ul>
    </div>



</div>

@section Scripts{
    <script>
        $(document).ready(function () {
      
        });
        (function () {
            var pageInfo = {};

            initPagination();
            var isLogin = (function () {
                var loginFlag = '@Model.IsLogin';
                return (loginFlag === 'True') ? true : false;
            })();
            init();
            function init() {
                initEvent();
                initEditor();
                if (isLogin) {
                    
                    var pageIndex = $("#txtPageIndex").attr("pageIndex");
                    initBlogs(pageIndex*1);
                }
            }
            function initEvent() {
                var $blogDiv = $(".grey-bg");
                $("#btnBlog").click(function () {
                    $blogDiv.show();
                });
                $("#btnCloseBlog").click(function () {
                    $blogDiv.hide();
                });

            }

            function initEditor() {
                var E = window.wangEditor;
                var editor = new E('#editor');
                // 自定义菜单配置
                editor.customConfig.menus = [
                    'head',  // 标题
                    'bold',  // 粗体
                    //'italic',  // 斜体
                    //'underline',  // 下划线
                    //'strikeThrough',  // 删除线
                    //'foreColor',  // 文字颜色
                    //'backColor',  // 背景颜色
                    'link',  // 插入链接
                    'list',  // 列表
                    'justify',  // 对齐方式
                    'quote',  // 引用
                    'emoticon',  // 表情
                    'image',  // 插入图片
                    'table',  // 表格
                    'video',  // 插入视频
                    'code',  // 插入代码
                    'undo',  // 撤销
                    'redo'  // 重复
                ];

                editor.create();
                $("#btnCommitBlog").click(function () {
                    var url = config.api_url + "/BlogApi/NewBlog";
                    var reg = /<img[^>]*>/;
                    var pic = editor.txt.html().match(reg);
                    var picSummary = "";
                    if (!!pic) { picSummary = pic[0]; }
                    var data = {
                        title: $("#txt_title").val(),
                        html: editor.txt.html(),
                        summary: editor.txt.text().substr(0, 200),
                        picSummary: picSummary
                    };
                    ajaxRequest.post(data, url).done(function (d) {
                        if (d) {
                            $(".grey-bg").hide();
                            alert("Success", function () {
                                editor.txt.clear();
                                $("#txt_title").val("");
                                window.location.reload();
                            })
                        }

                    });
                });

            }

            function initBlogs(pageIndex) {
                
                var url = config.api_url + "/BlogApi/GetBlogs?pageIndex=" + pageIndex + "";
                var data = {

                };
                var blogObj = new Blog("#blog_container");
                $("#blog_container").html("");
                ajaxRequest.get(data, url).done(function (d) {
                   
                    d.blogList.forEach(function (v) {
                        blogObj.newBlock(v);
                    });
                    setPaginationBtnStatus(d.pageIndex, d.pageCount);
                    pageInfo.pageCount = d.pageCount;
                    var $pageIndex = $("#txtPageIndex");
                    $pageIndex.text(d.pageIndex + "/" + d.pageCount);
                    $pageIndex.attr("pageIndex", d.pageIndex);

                });
            }
            function setPaginationBtnStatus(pageIndex,pageCount) {
                if (pageIndex === pageCount) { $("#btnNext").addClass("disabled"); }
                if (pageIndex === 1) { $("#btnPre").addClass("disabled"); }
                if (pageIndex > 1) { $("#btnPre").removeClass("disabled"); }
                if (pageIndex < pageCount) { $("#btnNext").removeClass("disabled"); }
            }


            function initPagination() {
                $("#btnPre").click(function () { 
                    var $pageIndex = $("#txtPageIndex");
                    var pageIndex = $pageIndex.attr("pageIndex");
                    var requestIndex = pageIndex * 1 - 1;
                    if (requestIndex === 0) return;
                    initBlogs(requestIndex);
                });
                $("#btnNext").click(function () {
                    var $pageIndex = $("#txtPageIndex");
                    var pageIndex = $pageIndex.attr("pageIndex");
                    var requestIndex = pageIndex * 1 + 1;
                    if (requestIndex > pageInfo.pageCount) { return; }
                    initBlogs(requestIndex);
                });

            }



            
        })();
    </script>
}